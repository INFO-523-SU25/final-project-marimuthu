{
  "hash": "5e1511b91287452d6c3875588012f130",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Modeling and Predicting YouTube Engagement\"\nsubtitle: \"Proposal\"\nauthor: \n  - name: \"Marimuthu - Ashok kumar Marimuthu\"\n    affiliations:\n      - name: \"College of Information Science, University of Arizona\"\ndescription: \"Project description\"\nformat:\n  html:\n    code-tools: true\n    code-overflow: wrap\n    code-line-numbers: true\n    embed-resources: true\neditor: visual\ncode-annotations: hover\nexecute:\n  warning: false\njupyter: python3\n---\n\n::: {#load-pkgs .cell message='false' execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n```\n:::\n\n\n## Dataset\n\n::: {#b080f5ad .cell execution_count=2}\n``` {.python .cell-code}\n## Dataset 1: YouTube Trending Video Dataset (Kaggle – India)\n#| label: load-dataset\n#| message: false\n\ndf = pd.read_csv(\"data/IN_youtube_trending_data.csv\")\nprint(\"shape:\\n\",df.shape)\nprint(\"==============================================================\")\nprint(\"sample:\\n\",df.head())\nprint(\"==============================================================\")\nprint(\"Info:\")\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nshape:\n (251277, 16)\n==============================================================\nsample:\n       video_id                                              title  \\\n0  Iot0eF6EoNA  Sadak 2 | Official Trailer | Sanjay | Pooja | ...   \n1  x-KbnJ9fvJc  Kya Baat Aa : Karan Aujla (Official Video) Tan...   \n2  KX06ksuS6Xo  Diljit Dosanjh: CLASH (Official) Music Video |...   \n3  UsMRgnTcchY  Dil Ko Maine Di Kasam Video | Amaal M Ft.Ariji...   \n4  WNSEXJJhKTU  Baarish (Official Video) Payal Dev,Stebin Ben ...   \n\n            publishedAt                 channelId    channelTitle  categoryId  \\\n0  2020-08-12T04:31:41Z  UCGqvJPRcv7aVFun-eTsatcA    FoxStarHindi          24   \n1  2020-08-11T09:00:11Z  UCm9SZAl03Rev9sFwloCdz1g  Rehaan Records          10   \n2  2020-08-11T07:30:02Z  UCZRdNleCgW-BGUJf-bbjzQg  Diljit Dosanjh          10   \n3  2020-08-10T05:30:49Z  UCq-Fj5jknLsUf-MWSy4_brA        T-Series          10   \n4  2020-08-11T05:30:13Z  UCye6Oz0mg46S362LwARGVcA   VYRLOriginals          10   \n\n          trending_date                                               tags  \\\n0  2020-08-12T00:00:00Z  sadak|sadak 2|mahesh bhatt|vishesh films|pooja...   \n1  2020-08-12T00:00:00Z                                             [None]   \n2  2020-08-12T00:00:00Z  clash diljit dosanjh|diljit dosanjh|diljit dos...   \n3  2020-08-12T00:00:00Z  hindi songs|2020 hindi songs|2020 new songs|t-...   \n4  2020-08-12T00:00:00Z  VYRL Original|Mohsin Khan|Shivangi Joshi|Payal...   \n\n   view_count   likes  dislikes  comment_count  \\\n0     9885899  224925   3979409         350210   \n1    11308046  655450     33242         405146   \n2     9140911  296533      6179          30058   \n3    23564512  743931     84162         136942   \n4     6783649  268817      8798          22984   \n\n                                   thumbnail_link  comments_disabled  \\\n0  https://i.ytimg.com/vi/Iot0eF6EoNA/default.jpg              False   \n1  https://i.ytimg.com/vi/x-KbnJ9fvJc/default.jpg              False   \n2  https://i.ytimg.com/vi/KX06ksuS6Xo/default.jpg              False   \n3  https://i.ytimg.com/vi/UsMRgnTcchY/default.jpg              False   \n4  https://i.ytimg.com/vi/WNSEXJJhKTU/default.jpg              False   \n\n   ratings_disabled                                        description  \n0             False  Three Streams. Three Stories. One Journey. Sta...  \n1             False  Singer/Lyrics: Karan Aujla Feat Tania Music/ D...  \n2             False  CLASH official music video performed by DILJIT...  \n3             False  Gulshan Kumar and T-Series presents Bhushan Ku...  \n4             False  VYRL Originals brings to you ‘Baarish’ - the b...  \n==============================================================\nInfo:\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 251277 entries, 0 to 251276\nData columns (total 16 columns):\n #   Column             Non-Null Count   Dtype \n---  ------             --------------   ----- \n 0   video_id           251277 non-null  object\n 1   title              251277 non-null  object\n 2   publishedAt        251277 non-null  object\n 3   channelId          251277 non-null  object\n 4   channelTitle       251276 non-null  object\n 5   categoryId         251277 non-null  int64 \n 6   trending_date      251277 non-null  object\n 7   tags               251277 non-null  object\n 8   view_count         251277 non-null  int64 \n 9   likes              251277 non-null  int64 \n 10  dislikes           251277 non-null  int64 \n 11  comment_count      251277 non-null  int64 \n 12  thumbnail_link     251277 non-null  object\n 13  comments_disabled  251277 non-null  bool  \n 14  ratings_disabled   251277 non-null  bool  \n 15  description        231822 non-null  object\ndtypes: bool(2), int64(5), object(9)\nmemory usage: 27.3+ MB\n```\n:::\n:::\n\n\n## Dataset 1: YouTube Trending Video Dataset (Kaggle – India)\n\n### Source and Provenance\n\n- **Source:** [Kaggle – rsrishav/youtube-trending-video-dataset](https://www.kaggle.com/datasets/rsrishav/youtube-trending-video-dataset)  \n- **Collected by:** Kaggle user [@rsrishav](https://www.kaggle.com/rsrishav)  \n- **Date Collected:** The dataset was last updated in 2023  \n- **How it was collected:** Video metadata was scraped daily from YouTube’s trending page in India using YouTube API and stored as structured CSVs.\n\n---\n\n### Data Access\n\nThe dataset used in this project, `IN_youtube_trending_data.csv`, exceeds GitHub’s file size limit (100MB) and is therefore not included in the repository.\n\nTo access the dataset, please use the following Google Drive link:\n\n[Download IN_youtube_trending_data.csv](https://drive.google.com/file/d/17TAprXIrTiePPgliwnLybNiDe-_tC4tv/view?usp=drive_link)\n\nAfter downloading, place the file in the `data` folder.\n\n---\n\n### Description of Observations\n\nThis file contains metadata for trending YouTube videos in **India**. Each row represents a video trending on a specific day. Videos that trend across multiple days appear multiple times in the dataset.\n\nThe dataset includes **approximately 251,000 rows and 15 columns**. Key variables include:\n\n- `title` – video title  \n- `channelTitle` – channel name  \n- `publishedAt` – original video upload time  \n- `view_count`, `likes`, `comment_count` – performance metrics  \n- `tags`, `description`, `categoryId` – contextual info\n\nThis dataset supports both categorical and quantitative analysis. It’s suitable for time-based, text-based, and engagement-based exploration.\n\n---\n\n### Ethical Considerations\n\n- All metadata is collected from **publicly accessible video pages**\n- No private or personally identifiable user information (PII) is included\n- The data is shared under Kaggle’s open use policy for academic and non-commercial use\n\n---\n\n### Research Question\n\n**1. What video characteristics (e.g., publish time, title structure, tags, category) are associated with higher engagement (views, likes, comments)?**\n\n**2. Can we build a predictive model to identify whether a video will be high-performing based on its metadata?**\n\nI will examine how the following video characteristics influence engagement metrics (views, likes, comments):\n\n- **Publish timing** (hour and day of the week)\n- **Title length and patterns** (e.g., keyword use, clickbait phrases, presence of numbers)\n- **Video category** (`categoryId`)\n- **Tags** (number of tags, presence of specific keywords)\n\n**Note:** The dataset does not include video duration or thumbnail image content. These may be considered in future work using the YouTube Data API.\n\ninfluence performance metrics such as:\n- `view_count`\n- `likes`\n- `comment_count`\n\n#### Why This Matters\n\nThis question is relevant for both established creators and new channels aiming to optimize content strategy for discoverability and engagement.\n\n---\n\n### Analysis Plan\n\nTo answer the research question, I will:\n\n#### - Preprocess the data:\n- Convert `publishedAt` to `datetime` format\n- Extract features such as `hour`, `weekday`, and create `daypart` buckets (morning/afternoon/evening)\n- Handle duplicate trending entries by keeping the first appearance or aggregating views/likes\n\n#### - Create new variables:\n- `title_length`: total number of characters in the video title\n- `has_numbers_in_title`: binary indicator for numbers in title (e.g., “Top 5”, “2023”)\n- `upload_hour_bucket`: categorical variable (e.g., morning, afternoon, evening)\n- `tag_count`: number of tags used\n\n#### - Explore patterns:\n- Group by `categoryId`, `upload_hour_bucket`, and `title_length` to visualize how engagement (views/likes/comments) varies\n- Use bar plots, boxplots, and heatmaps to show relationships\n\n#### - Build a predictive model:\n- Define the target variable:\n  - `high_performer`: binary variable = 1 if video is in the top 25% by view count, else 0\n- Use supervised learning models (e.g., logistic regression, decision tree, or random forest)\n- Train/test split and evaluate model using accuracy, precision, recall, and ROC-AUC\n- Identify the most important features contributing to video performance\n\n#### - Interpret results:\n- Use model outputs (coefficients or feature importance) to explain which video characteristics are most predictive of success\n- Relate findings back to the research question and practical implications for content creators\n\n**Note:** The final set of features may evolve as the analysis progresses, based on data quality, correlations, or insights from EDA. While the initial modeling plan includes classification using logistic regression or decision trees, the specific model and feature set will be finalized based on what proves most effective during the modeling phase. The target variable is currently defined as videos in the top 25% of view count, but this threshold may be adjusted after reviewing the distribution.\n\n::: {#eabd380a .cell execution_count=3}\n``` {.python .cell-code}\n## Dataset 2: 1000 Most Trending YouTube Videos (Kaggle)\n#| label: load-dataset\n#| message: false\n\ndf2 = pd.read_csv(\"data/top-1000-trending-youtube-videos.csv\")\nprint(\"shape:\\n\",df2.shape)\nprint(\"==============================================================\")\nprint(\"sample:\\n\",df2.head())\nprint(\"==============================================================\")\nprint(\"Info:\")\ndf2.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nshape:\n (1000, 7)\n==============================================================\nsample:\n    rank                                              Video    Video views  \\\n0     1  20 Tennis shots if they were not filmed, NOBOD...      3,471,237   \n1     2  Lil Nas X - Old Town Road (Official Movie) ft....     54,071,677   \n2     3                 JoJo Siwa - Karma (Official Video)     34,206,747   \n3     4  Wiz Khalifa - See You Again ft. Charlie Puth [...  6,643,904,918   \n4     5                       伊賀の天然水強炭酸水「家族で、シュワシェア。」篇　15秒    236,085,971   \n\n        Likes Dislikes Category  published  \n0      19,023      859      NaN       2017  \n1   3,497,955   78,799    Music       2019  \n2     293,563      NaN    Music       2024  \n3  44,861,602      NaN    Music       2015  \n4          38      NaN      NaN       2021  \n==============================================================\nInfo:\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1000 entries, 0 to 999\nData columns (total 7 columns):\n #   Column       Non-Null Count  Dtype \n---  ------       --------------  ----- \n 0   rank         1000 non-null   int64 \n 1   Video        1000 non-null   object\n 2   Video views  1000 non-null   object\n 3   Likes        973 non-null    object\n 4   Dislikes     687 non-null    object\n 5   Category     820 non-null    object\n 6   published    1000 non-null   int64 \ndtypes: int64(2), object(5)\nmemory usage: 54.8+ KB\n```\n:::\n:::\n\n\n## Dataset 2: Top 1000 Trending YouTube Videos (Kaggle)\n\n### Source and Provenance\n\n- **Source:** [Kaggle – 1000 Most Trending YouTube Videos](https://www.kaggle.com/datasets/samithsachidanandan/1000-most-trending-youtube-videos)  \n- **Collected by:** Samith Sachidanandan  \n- **Date Collected:** Not specified; likely compiled as a snapshot of all-time trending videos  \n- **How it was collected:** Curated list of the most viewed and liked YouTube videos, possibly scraped from YouTube’s top charts. The dataset includes basic metadata and performance metrics.\n\n---\n\n### Description of Observations\n\nThis dataset contains **1,000 records**, each representing a globally popular YouTube video. It includes the following columns:\n\n- `rank`: position in the top 1000  \n- `Video`: title of the video  \n- `Video views`: number of views  \n- `Likes`: number of likes  \n- `Dislikes`: number of dislikes  \n- `Category`: general topic (e.g., Music, Sports)  \n- `published`: year the video was published\n\nAlthough compact, this dataset captures extremely successful videos and is useful for identifying characteristics shared by top performers across different time periods and content types.\n\n---\n\n### Ethical Considerations\n\n- The dataset contains only **publicly available metadata** from YouTube  \n- No personal or user-level data is included  \n- It is shared under Kaggle’s community license for academic and non-commercial use\n\n---\n\n### Research Question\n\n**What common characteristics do top-performing YouTube videos share across categories and publishing years?**\n\nThis dataset will help explore whether video success correlates with:\n- Category (e.g., Music vs. Gaming)\n- Year of publication (older vs. newer content)\n- View-to-like ratios or audience engagement patterns\n\n#### Why This Matters:\nThis dataset provides a snapshot of **top-tier performers**, helping validate whether trends found in the larger India-specific dataset (Dataset 1) hold true at the global, all-time level.\n\n---\n\n### Variables to Explore\n\n- **Quantitative:** `Video views`, `Likes`, `Dislikes`  \n- **Categorical:** `Category`, `published` (as a proxy for video age)\n\n---\n\n### Analysis Plan\nConvert Video views, Likes, and Dislikes to numeric format (they may be strings with commas)\n\n#### - Create new derived variables:\n\n- like_ratio = Likes / Video views\n\n- engagement_score = (Likes + Dislikes) / Video views\n\n#### - Analyze view counts and like ratios by Category and published year\n\n- Visualize trends in engagement over time and across categories\n\n- Compare the findings with those from Dataset 1 to see if the characteristics of top-trending videos align with broader trending patterns\n\n#### - Role in Final Project\nThis dataset will serve as a focused benchmark of top-performing content. While it won’t be used for predictive modeling, it provides valuable insight into common characteristics of high-success videos and supports cross-validation of patterns discovered in the larger primary dataset.\n\n::: {#27d465f6 .cell execution_count=4}\n``` {.python .cell-code}\n## Dataset 3: YouTube Trending Videos via API (India)\n#| label: load-dataset\n#| message: false\n\ndf3 = pd.read_csv(\"data/youtube_api_sample.csv\")\nprint(\"shape:\\n\",df3.shape)\nprint(\"==============================================================\")\nprint(\"sample:\\n\",df3.head())\nprint(\"==============================================================\")\nprint(\"Info:\")\ndf3.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nshape:\n (50, 9)\n==============================================================\nsample:\n        videoId                                              title  \\\n0  FbXOsVByKmk  They Call Him OG - Firestorm Lyric Video | Paw...   \n1  qeVfT2iLiu0  Coolie - Official Trailer | Superstar Rajinika...   \n2  VCqOcfGebaY  2025 PMWC at EWC Grand Finals D2 | English Co ...   \n3  enjkcCdAlXc  Aavan Jaavan Song | WAR 2 | Hrithik Roshan, Ki...   \n4  KkggRAFMg5c  Coolie | Trailer Reaction | Superstar Rajinika...   \n\n       channelTitle  categoryId           publishedAt  viewCount  likeCount  \\\n0  Sony Music South          10  2025-08-02T08:53:07Z    4702482     609690   \n1            Sun TV          24  2025-08-02T13:30:25Z    9100175     582157   \n2       Snax Gaming          20  2025-08-02T15:55:41Z    1068085      54783   \n3               YRF          10  2025-07-31T05:41:16Z   20938348     319958   \n4     LifeofShazzam          24  2025-08-02T14:15:38Z     240889      21255   \n\n   commentCount   duration  \n0         26849     PT4M6S  \n1         26555     PT3M2S  \n2           109  PT4H51M1S  \n3         14989       PT4M  \n4          1101    PT8M20S  \n==============================================================\nInfo:\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 50 entries, 0 to 49\nData columns (total 9 columns):\n #   Column        Non-Null Count  Dtype \n---  ------        --------------  ----- \n 0   videoId       50 non-null     object\n 1   title         50 non-null     object\n 2   channelTitle  50 non-null     object\n 3   categoryId    50 non-null     int64 \n 4   publishedAt   50 non-null     object\n 5   viewCount     50 non-null     int64 \n 6   likeCount     50 non-null     int64 \n 7   commentCount  50 non-null     int64 \n 8   duration      50 non-null     object\ndtypes: int64(4), object(5)\nmemory usage: 3.6+ KB\n```\n:::\n:::\n\n\n## Dataset 3: YouTube Trending Videos via API (India)\n\n### Source and Provenance\n\n- **Source:** [YouTube Data API v3 – Google Developer Platform](https://developers.google.com/youtube/v3)  \n- **Collected by:** Custom script using Google’s official API  \n- **Date Collected:** 08/01/2025 \n- **How it was collected:**  \n  A Python script was used to query the YouTube Data API for the top 50 trending videos in India (`regionCode=\"IN\"`) using the `videos().list()` endpoint with `chart=\"mostPopular\"`.\n\n---\n\n### Description of Observations\n\nThe dataset contains metadata for **50 currently trending videos in India**, including:\n\n- `videoId`, `title`, `channelTitle`, `categoryId`  \n- `publishedAt`, `viewCount`, `likeCount`, `commentCount`  \n- `duration`\n\nThis data was saved locally as `youtube_api_top50_IN.csv` and is included in the `/data` folder. This file reflects a real-time snapshot and complements the static, historical datasets used in the project.\n\n\n---\n\n### Ethical Considerations\n\n- Data is collected via the **official YouTube Data API v3**, in accordance with Google’s [API Terms of Service](https://developers.google.com/youtube/terms/api-services-terms-of-service)  \n- Only **public metadata** is accessed; no user-level or private data is collected  \n- The API is used for read-only academic and exploratory purposes\n\n---\n\n### Research Use Case\n\n**Can real-time YouTube video metadata validate or enrich findings from historical datasets, and how might it be used to support future business applications?**\n\n### Why This Matters\n\nUnlike static CSVs, the YouTube Data API enables **ongoing and scalable access** to up-to-date video trends. This can:\n- Help validate whether patterns found in Dataset 1 still apply today  \n- Provide real-time insights for content creators  \n- Support future business tools like dashboards, content calendars, or trend detection systems\n\nThis small sample demonstrates the ability to connect my project to **live data streams** — a powerful step toward applied analytics.\n\n---\n\n### Variables in the Sample\n\n- **Quantitative:** `viewCount`, `likeCount`, `commentCount`  \n- **Temporal:** `publishedAt`  \n- **Categorical:** `categoryId`, `channelTitle`, `duration` \n\n---\n\n### Analysis Plan\n- Use this file primarily for enrichment and validation — not modeling\n\n- Convert duration from ISO 8601 to minutes and add as a new variable\n\n- Visualize and compare distribution of viewCount and likeCount to Dataset 1\n\n- Check if shorter/longer durations correlate with engagement levels\n\n- Optionally explore:\n\n  - View-to-like ratios\n\n  - Category-level performance\n\nFrame as a proof-of-concept for automated, ongoing data integration\n\n### Role in Final Project\nThis dataset demonstrates how the YouTube API can be used to build real-time or on-demand analytics pipelines. While it won’t be used for model training, it plays a key role in validating generalizability, supporting feature engineering, and establishing a future-facing path for creator-focused analytics tools.\n\n## Weekly Plan of Attack\n\n### Week 1: Finalize Data & Preprocessing (Aug 2–Aug 8)\n\n- Submit proposal and finalize dataset files in `/data` folder\n- Clean and standardize variables (e.g., dates, durations, text)\n- Engineer new features like:\n  - `title_length`, `upload_hour`, `like_ratio`, `duration_minutes`\n- Save cleaned version for modeling in `/notebooks` or `/src`\n\n---\n\n### Week 2: Modeling & Exploratory Analysis (Aug 9–Aug 15)\n\n- Conduct exploratory analysis:\n  - Views by category, upload time, title length\n  - Correlations and class imbalance check\n- Define target variable:\n  - Binary (e.g., top 25% views = \"high performer\") or regression\n- Train and evaluate models:\n  - Logistic Regression, Decision Tree, Random Forest\n- Use classification metrics:\n  - Accuracy, ROC-AUC, precision, recall\n- Review feature importance to guide interpretation\n\n---\n\n### Week 3: Report Writing & Presentation (Aug 16–Aug 21)\n\n- Create `presentation.qmd` with key visualizations and model insights\n- Tell a clear story: problem → data → features → modeling → takeaways\n- Add a reflection section:\n  - What I learned, what I would improve with more time\n- Clean up GitHub repo:\n  - Add README, remove unused files, ensure reproducibility\n\n",
    "supporting": [
      "proposal_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}